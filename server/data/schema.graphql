    type Client {
        id: ID
        name: String
        surname: String
        age: Int
        enterprise: String
        email: String
        type: TypeClient
        orders: [Order]
    }

    type Order {
        product: String
        price: Int
    }

    enum TypeClient {
        BASICO
        PREMIUM
    }

    type Email {
        email: String
    }

    type Query {
        getClients(limite: Int) : [Client]
        getClient(id:ID) : Client
    }

    input OrderInput {
        product: String
        price: Int
    }

    input EmailInput {
        email: String
    }

    input ClientInput {
        id: ID
        name!: String
        surname!: String
        age!: Int
        enterprise!: String
        email: String
        type!: TypeClient!
        orders: [OrderInput]
    }

    type Mutation {
        createClient(input: ClientInput) : Client
        updateClient(input: ClientInput) : Client
        deleteClient(id: ID!) : String
    }